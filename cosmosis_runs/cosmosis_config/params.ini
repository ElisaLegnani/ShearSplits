[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}

[DEFAULT]
BASELINE_DIR = .
DATAVECTOR_DIR = .
2PT_FILE = ${DATAFILE}
2PT_DATA_SETS = xip xim
RUN_NAME = ${RUNNAME}

[output]
filename = chain_%(RUN_NAME)s.txt
format = text
lock = F
privacy = F

[test]
save_dir = ${OUT_DIR}
fatal_errors = T

[pipeline]
modules = consistency bbn_consistency camb extrapolate fits_nz source_photoz_bias fast_pt IA pk_to_cl add_intrinsic 2pt_shear 2pt_shear_ii 2pt_shear_gi shear_m_bias 
;2pt_like?
quiet = T
timing = F
debug = F
values = ${VALUESINCLUDE}
extra_output = cosmological_parameters/sigma_8 cosmological_parameters/sigma_12 data_vector/2pt_chi2
fast_slow = F
first_fast_module = shear_m_bias

[consistency]
file = ${BASE}/utility/consistency/consistency_interface.py

[camb]
file = /global/cfs/cdirs/des/elisa/cosmosis_env/lib/python3.11/site-packages/cosmosis/cosmosis-standard-library/boltzmann/camb/camb_interface.py
mode = all
lmax = 2500
feedback = 0
kmin = 1e-5
kmax = 100.0
nk = 400
halofit_version = takahashi

[bbn_consistency]
file = ${BASE}/utility/bbn_consistency/bbn_consistency.py

[extrapolate]
file = ${BASE}/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.

[fits_nz]
file = ${BASE}/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = source
prefix_section = T
prefix_extension = T

[source_photoz_bias]
file = ${BASE}/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[fast_pt]
file = ${BASE}/structure/fast_pt/fast_pt_interface.py
do_ia = T
k_res_fac = 0.5
verbose = F

[IA]
file = ${BASE}/intrinsic_alignments/tatt/tatt_interface.py
sub_lowk = F
do_galaxy_intrinsic = F
ia_model = tatt

[pk_to_cl]
file = ${BASE}/structure/projection/project_2d.py
ell_min_logspaced = 0.1
ell_max_logspaced = 5.0e5
n_ell_logspaced = 100 
shear-shear = source-source
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
intrinsicb-intrinsicb=source-source
verbose = F
get_kernel_peaks = F
sig_over_dchi = 20. 
shear_kernel_dchi = 10. 

[add_intrinsic]
file = ${BASE}/shear/add_intrinsic/add_intrinsic.py
shear-shear = T
position-shear = F
perbin = F

[add_eb]
file = /global/u1/e/elegnani/IA_split_shear/covariance/add_bmode_cl.py

[2pt_shear]
file = ${BASE}/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type = EB
theta_file = %(2PT_FILE)s
bin_avg = T
; these get
input_section_name = shear_cl  shear_cl_bb
output_section_name = shear_xi_plus  shear_xi_minus

[2pt_shear_ii]
file = ${BASE}/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type = '22'
theta_file = %(2PT_FILE)s
bin_avg = T
; these get
input_section_name = shear_cl_ii
output_section_name = shear_xi_ii

[2pt_shear_gi]
file = ${BASE}/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type = '22'
theta_file = %(2PT_FILE)s
bin_avg = T
; these get
input_section_name = shear_cl_gi
output_section_name = shear_xi_gi  

[shear_m_bias]
file = ${BASE}/shear/shear_bias/shear_m_bias.py
m_per_bin = True
; Despite the parameter name, this can operate on xi as well as C_ell
cl_section = shear_xi_plus shear_xi_minus
cross_section = galaxy_shear_xi
verbose = F

;[2pt_like]
;file = ${BASE}/likelihood/2pt/2pt_point_mass/2pt_point_mass.py
;do_pm_marg = False
;do_pm_sigcritinv = False
;sigma_a = 10000.0
;no_det_fac = False
;include_norm = True
;data_file = %(2PT_FILE)s
;data_sets =  %(2PT_DATA_SETS)s
;make_covariance=F
;covmat_name=COVMAT
